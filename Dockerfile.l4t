ARG BASE_IMAGE="ros:noetic-perception"

FROM ${BASE_IMAGE}

ARG BUILD_DATE
ARG VERSION
ARG SONIA_USER=sonia
ARG SONIA_UID=50000
ARG BASE_LIB_NAME=sonia_common

LABEL maintainer="club.sonia@etsmtl.net"
LABEL net.etsmtl.sonia-auv.base_lib.build-date=${BUILD_DATE}
LABEL net.etsmtl.sonia-auv.base_lib.version=${VERSION}
LABEL net.etsmtl.sonia-auv.base_lib.name=${BASE_LIB_NAME}

## COMMON ENV
ENV ROS_LANG_DISABLE=genlisp:geneus
ENV SONIA_USER=${SONIA_USER}
ENV SONIA_HOME=/home/${SONIA_USER}
ENV SONIA_UID=${SONIA_UID}
ENV ROS_WS_SETUP=/opt/ros/${ROS_DISTRO}/setup.bash
## ENV FOR BASE LIB
ENV BASE_LIB_WS=${SONIA_HOME}/base_lib_ws
ENV BASE_LIB_WS_SETUP=${BASE_LIB_WS}/devel/setup.bash
ENV BASE_LIB_NAME=${BASE_LIB_NAME}
ENV BASE_LIB_PATH=${BASE_LIB_WS}/src/${BASE_LIB_NAME}

## ADD EXTRA DEPENDENCIES (GIT and ROS Remote Debuging)
RUN apt update && apt install -y libyaml-cpp-dev openssh-client gdb git sudo ninja-build curl
RUN apt upgrade -y
RUN rm -rf /var/lib/apt/lists/*

RUN useradd --uid ${SONIA_UID} --create-home ${SONIA_USER} -G sudo
RUN echo 'sonia:test' | chpasswd

#RUN echo "deb http://packages.ros.org/ros/ubuntu focal main" > /etc/apt/sources.list.d/ros-latest.list
#RUN curl -s https://raw.githubusercontent.com/ros/rosdistro/master/ros.asc | sudo apt-key add -
#RUN apt update && apt install ros-noetic-ros-base

RUN mkdir -p ~/image_transport_ws/src
RUN cd ~/image_transport_ws/src
RUN source /opt/ros/noetic/setup.bash
RUN catkin_create_pkg learning_image_transport image_transport cv_bridge

RUN cd ~/image_transport_ws
RUN rosdep install --from-paths src -i -y --rosdistro indigo
RUN catkin_make
RUN source devel/setup.bash

## Add support for vscode extension volume caching
RUN mkdir -p ${SONIA_HOME}/.vscode-server/extensions && chown -R ${SONIA_USER}: ${SONIA_HOME}/.vscode-server

## Adding Gazebo messages for control visualization.
WORKDIR ${BASE_LIB_WS}/src
RUN git clone https://github.com/ros-simulation/gazebo_ros_pkgs.git
RUN cd gazebo_ros_pkgs && rm -r gazebo_dev gazebo_plugins gazebo_ros gazebo_ros_control gazebo_ros_pkgs

WORKDIR ${BASE_LIB_WS}

COPY . ${BASE_LIB_PATH}
RUN bash -c "source ${ROS_WS_SETUP} && catkin_make --use-ninja"

RUN chown -R ${SONIA_USER}: ${BASE_LIB_WS}
